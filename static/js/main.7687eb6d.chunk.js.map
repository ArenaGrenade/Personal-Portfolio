{"version":3,"sources":["SceneSetup/RenderPlane.jsx","SceneSetup/shaders.jsx","images/img1.jpg","SceneSetup/GalleryPlane.jsx","SceneSetup/Scene.jsx","Pages/Home/Landing.jsx","Pages/Home/AboutMe.jsx","Pages/Home.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["RenderPlane","props","meshRef","useResource","materialRef","clock","useThree","useFrame","current","position","set","image","onBeforeCompile","shader","userData","new_uniforms","time","elapsedTime","Object","entries","key","value","uniforms","ref","args","vertexShader","fragmentShader","map","GalleryPlane","useLoader","THREE","img","lightRef","useUpdate","light","lookAt","mesh","rotation","Math","PI","color","metalness","roughness","side","Scene","gl","camera","pathRef","scrollYProgress","useViewportScroll","cameraPositionZ","useTransform","cameraRotationY","useEffect","near","far","fov","updateProjectionMatrix","setSize","window","innerWidth","innerHeight","setPixelRatio","devicePixelRatio","fallback","Landing","opacity","div","className","style","p","id","initial","y","animate","transition","duration","type","delay","h1","button","onClick","ev","scroller","scrollTo","smooth","icon","faChevronDown","size","AboutMe","Row","Col","md","xs","Home","sideBarColorsAnim","landingPageOpacity","aboutMePageOpacity","scroll","scrollToTop","Container","fluid","name","href","download","marginRight","App","Provider","Canvas","multisampling","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","body"],"mappings":"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","file":"static/js/main.7687eb6d.chunk.js","sourcesContent":["import { useResource, useFrame, useThree } from \"react-three-fiber\"\nimport { vertexShader, fragmentShader } from \"./shaders\"\n\nconst RenderPlane = props => {\n    const meshRef = useResource();\n    const materialRef = useResource();\n    const {clock} = useThree();\n\n    useFrame(() => {\n        meshRef.current?.position.set(0, 0, 0);\n\n        if (props.image == null) {\n            materialRef.current.onBeforeCompile = shader => materialRef.current.userData.shader = shader;\n    \n            if (materialRef.current.userData.shader) {\n                const new_uniforms = {\n                    time: clock.elapsedTime,\n                }\n                for (const [key, value] of Object.entries(new_uniforms)) {\n                    materialRef.current.userData.shader.uniforms[key].value = value\n                }\n            }\n        }\n    })\n\n    return(\n        <>\n            <mesh ref={meshRef}>\n                <planeGeometry args={[4, 3, 3]} />\n                {props.image == null?\n                    <rawShaderMaterial args={[{\n                        uniforms: {\n                            time: { value: clock.elapsedTime },\n                        },\n                        vertexShader,\n                        fragmentShader,\n                    }]} ref={materialRef} />\n                : <meshBasicMaterial args={[{map: props.image}]} />}\n            </mesh>\n        </>\n    )\n}\n\nexport default RenderPlane;\n","export const vertexShader = `\n    attribute vec3 position;\n    attribute vec2 uv;\n\n    uniform mat4 modelViewMatrix;\n    uniform mat4 projectionMatrix;\n\n    varying vec2 uVu;\n\n    void main(void) {\n        uVu = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n    }\n`\n\nexport const fragmentShader = `\n    #define PI 3.142\n\n    precision highp float;\n    uniform float time;\n\n    varying vec2 uVu;\n\n    #define NUM_OCTAVES 3\n    #define SPEED_SCALE 0.3\n    #define WARP_DEPTH 2\n\n    // https://gist.github.com/patriciogonzalezvivo/670c22f3966e662d2f83 - one of the best gists to exist\n    float rand(vec2 n) { \n        return fract(sin(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\n    }\n\n    float noise(vec2 p){\n        vec2 ip = floor(p);\n        vec2 u = fract(p);\n        u = u*u*(3.0-2.0*u);\n        \n        float res = mix(\n            mix(rand(ip),rand(ip+vec2(1.0,0.0)),u.x),\n            mix(rand(ip+vec2(0.0,1.0)),rand(ip+vec2(1.0,1.0)),u.x),u.y);\n        return res*res;\n    }\n\n    // Rotation matrix\n    const mat2 rot_mat = mat2( 0.80,  0.60, -0.60,  0.80 );\n\n    void rotate_point(inout vec2 p) {\n        // This line just generates a random value between 2.01 and 2.04\n        float factor = 2.01 + mod(rand(p) * 100.0, 4.0) * 0.01;\n        p *= (rot_mat * 2.04);\n    }\n    float calculate_iteration(inout float frequency, inout float amplitude, vec2 p, float addend) {\n        float f = amplitude * noise(frequency * p + addend);\n        amplitude *= 0.5;\n        frequency *= 2.0;\n        return f;\n    }\n    float fbm(vec2 p) {\n        float amplitude = 0.5;\n        float frequency = 0.5;\n        float f = 0.0;\n        \n        for (int i = 0 ; i < NUM_OCTAVES; i++) {\n            if (i == 0) {\n                f += calculate_iteration(frequency, amplitude, p, time * SPEED_SCALE);\n            } else {\n                f += calculate_iteration(frequency, amplitude, p, sin(time * SPEED_SCALE + noise(p)));\n            }\n            rotate_point(p);\n        }\n        \n        return f / 0.96975;\n    }\n\n    // A very simple warping\n    float warp(vec2 p) {\n        float val = fbm(p);\n        for (int i = 0; i < WARP_DEPTH; i++) val = fbm(p + val);\n        return val;\n    }\n\n    vec3 calculate_normal(vec2 p) {\n        float d = warp(p);\n        vec2 e = vec2(0.01, 0);\n        \n        vec3 n = d - vec3(\n            warp(p - e.xy),\n            2.0 * e.x,\n            warp(p - e.yx)\n        );\n        \n        return normalize(n);\n    }\n\n    void main(void)\n    {\n        vec2 uv = uVu.xy * 4.2;\n        float density = warp(uv);\n        \n        vec3 col = vec3(0.0);\n        // Apply Density based color-gradient from a lagoon blue\n        col = mix(vec3(2.0, 83.0, 125.0) / 255.0, vec3(1.0, 132.0, 169.0) / 255.0, smoothstep(0.0, 0.05, density));\n        col = mix(col, vec3(1.0, 191.0, 196.0) / 255.0, smoothstep(0.05, 0.3, density));\n        col = mix(col, vec3(169.0, 232.0, 219.0) / 255.0, smoothstep(0.3, 0.5, density));\n        col = mix(col, vec3(224.0, 247.0, 230.0) / 255.0, smoothstep(0.5, 0.7, density));\n        \n        // Do this so that lighting can be handled correctly\n        // We will invert it after applying lighting\n        col = 1.0 - col;\n        \n        // Lighting\n        vec3 n = calculate_normal(uv);\n        vec3 l = vec3(0.9, -0.02, -0.4);\n        // vec3 lig = normalize(l - vec3(uv.xy, density));\n        vec3 lig = l;\n        \n        float diffuse_intensity = 0.3;\n        float diffuse = clamp(diffuse_intensity + (1.0 - diffuse_intensity) * dot(n, lig), 0.0, 1.0);\n\n        vec3 i = vec3(0.86, 0.9, 0.95);\n        vec3 bdrf = clamp(i * (n.y * 0.5 + 0.5) + (1.0 - i) * diffuse, 0.8, 1.0);\n        \n        col *= bdrf;\n        col = vec3(1.0)-col;\n        col = col*col;\n        col *= vec3(1.2,1.2,1.2);\n        col = clamp(col, 0.0, 1.0);\n        \n        gl_FragColor = vec4(col, 1.0);\n    }\n`\n","export default __webpack_public_path__ + \"static/media/img1.b6d3a9b6.jpg\";","import RenderPlane from './RenderPlane';\nimport { useUpdate, useLoader } from \"react-three-fiber\"\nimport * as THREE from \"three\"\nimport img from \"../images/img1.jpg\"\n\nconst GalleryPlane = props => {\n    const texture = useLoader(THREE.TextureLoader, img)\n\n    const lightRef = useUpdate(light => {\n        light.position.set(0, -1.5, 0);\n        light.lookAt(0, -1.5, 2);\n    }, []);\n    const meshRef = useUpdate((mesh) => {\n        mesh.position.set(0, -1.5, 0);\n        mesh.rotation.set(Math.PI / 2, 0, 0);\n    }, [])\n\n    return (\n        <>\n            <RenderPlane />\n            <rectAreaLight ref={lightRef} args={[0x0184a9, 3, 4, 1]} />\n            <mesh ref={meshRef}>\n                <planeGeometry args={[5, 5]} />\n                <meshStandardMaterial args={[{ color: 0xFFFFFF, metalness: 0.6, roughness: 0.4, side: THREE.DoubleSide }]} />\n            </mesh>\n            {/*meshRef.current && <boxHelper args={[meshRef.current, 0x00FFFF]} />*/}\n        </>\n    )\n}\n\nexport default GalleryPlane;\n","import { useThree, useFrame, useResource } from \"react-three-fiber\";\nimport { useEffect, Suspense } from \"react\";\nimport { useTransform, useViewportScroll } from \"framer-motion\"\n\nimport GalleryPlane from \"./GalleryPlane\";\n\nconst Scene = props => {\n    const { gl, camera } = useThree();\n    const pathRef = useResource();\n    const { scrollYProgress } = useViewportScroll()\n    const cameraPositionZ = useTransform(scrollYProgress, [0, 1], [1, 3.5])\n    const cameraRotationY = useTransform(scrollYProgress, [0, 1], [0, -0.1 * Math.PI])\n\n    useEffect(() => {\n        camera.near = 0.1;\n        camera.far = 1000;\n        camera.fov = 75;\n        camera.updateProjectionMatrix();\n        gl.setSize(window.innerWidth, window.innerHeight);\n        gl.setPixelRatio(window.devicePixelRatio);\n    // eslint-disable-next-line\n    }, []);\n\n    useFrame(({gl, camera}) => {\n        gl.setSize(window.innerWidth, window.innerHeight);\n        gl.setPixelRatio(window.devicePixelRatio);\n\n        camera.position.set(0, 0, cameraPositionZ.current);\n        camera.rotation.set(0, cameraRotationY.current, 0);\n    })\n\n    return (\n        <> \n            <Suspense fallback={null}>\n                <GalleryPlane />\n            </Suspense>\n            {/*<axesHelper />*/}\n            <path ref={pathRef} />\n        </>\n    )\n};\n\nexport default Scene;\n","import { motion } from \"framer-motion\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faChevronDown } from '@fortawesome/free-solid-svg-icons'\nimport { scroller } from \"react-scroll\"\n\nconst Landing = ({opacity}) => {\n    const scrollDown = ev => scroller.scrollTo(\"AboutMe\", {\n        duration: 1200,\n        smooth: \"easeInOutQuint\"\n    })\n\n    return (\n        <motion.div className=\"row h-100-custom d-flex flex-column justify-content-center align-items-center text-center\" style={{opacity}}>\n            <motion.p \n                id=\"landing-subtitle\"\n                initial={{y: -10, opacity: 0}}\n                animate={{y: 10, opacity: 1}}\n                transition={{duration: 1.25, type: \"tween\", delay: 1.25}}\n                className=\"no-select\"\n            >\n                Hi! I am\n            </motion.p>\n            <motion.h1 \n                id=\"landing-title\"\n                initial={{y: -10, opacity: 0}}\n                animate={{y: 10, opacity: 1}}\n                transition={{duration: 1.25, type: \"tween\"}}\n                className=\"no-select\"\n            >\n                Rohan Asokan\n            </motion.h1>\n            <motion.button\n                id=\"chevron\"\n                initial={{opacity: 0}}\n                animate={{opacity: 1}}\n                transition={{duration: 1.25, type: \"tween\", delay: 2.5}}\n                onClick={scrollDown}\n            >\n                <FontAwesomeIcon icon={faChevronDown} size=\"2x\" />\n            </motion.button>\n        </motion.div>\n    )\n}\n\nexport default Landing;\n","import { Row, Col } from \"reactstrap\"\nimport { motion } from \"framer-motion\"\n\nconst AboutMe = ({opacity}) => {\n    return (\n        <Row className=\"h-100-custom d-flex flex-column justify-content-center align-items-center no-select\">\n            <Col md={6} xs={10} className=\"text-shadowed\">\n                <motion.p className=\"mt-4\" id=\"about-me-title\" style={{opacity}}>\n                    About Me\n                </motion.p>\n                <motion.p className=\"about-me-paragraph\" style={{opacity}}>\n                    I am a full-stack developer who loves to see design in everything. \n                    As a side-effect of loving design I also am interested in shaders, 3D rendering and the best of them all - making games.\n                </motion.p>\n                <motion.p className=\"about-me-paragraph\" style={{opacity}}>\n                    I was born in a nice city called Vellore in India.\n                    I did parts of my schooling in Vellore and Chennai.\n                    And the other part of it in Abu Dhabi.\n                    I am currently in my sophomore year doing my bachelors in Computer Science at the International Institute of Information Technology, Hyderabad.\n                </motion.p>\n                <motion.p className=\"about-me-paragraph\" style={{opacity}}>\n                    TL;DR I name my variables with camelCase - and that possibly tells a lot about me ;)\n                </motion.p>\n            </Col>\n        </Row>\n    )\n}\n\nexport default AboutMe;\n","import { Container } from \"reactstrap\"\nimport { motion, useTransform, useViewportScroll } from \"framer-motion\"\nimport { Element, animateScroll as scroll } from \"react-scroll\"\nimport { useEffect } from \"react\"\n\nimport Landing from \"./Home/Landing\"\nimport AboutMe from \"./Home/AboutMe\"\n\nconst Home = () => {\n    const { scrollYProgress } = useViewportScroll()\n    const sideBarColorsAnim = useTransform(scrollYProgress, [0, 0.5], [\"#000000\", \"#ffffff\"])\n    const landingPageOpacity = useTransform(scrollYProgress, [0, 0.5], [1, 0]);\n    const aboutMePageOpacity = useTransform(scrollYProgress, [0, 0.9], [0, 1]);\n\n    useEffect(() => {\n        scroll.scrollToTop({\n            smooth: false,\n            duration: 20\n        });\n    }, [])\n\n    return (\n        <>\n            <Container fluid>\n                <Landing opacity={landingPageOpacity} />\n                <Element name=\"AboutMe\"><AboutMe opacity={aboutMePageOpacity} /></Element>\n            </Container>\n            <motion.div \n                id=\"id-button-container\" \n                className=\"side-button-container\"\n                initial={{opacity: 0}}\n                animate={{opacity: 1}}\n                transition={{duration: 1.25, type: \"tween\", delay: 2.5}}\n            >\n                <motion.p className=\"side-button no-select\" style={{color: sideBarColorsAnim}}><a href=\"https://github.com/ArenaGrenade/ArenaGrenade.github.io/blob/main/files/Rohan_Asokan_Resume_SWE.pdf?raw=true\" className=\"side-button-content\" download>\n                    Resume\n                </a></motion.p>\n            </motion.div>\n            <motion.div \n                id=\"email-button-container\" \n                className=\"side-button-container\"\n                initial={{opacity: 0}}\n                animate={{opacity: 1}}\n                transition={{duration: 1.25, type: \"tween\", delay: 2.5}}\n            >\n                <motion.p className=\"side-button no-select\" style={{marginRight: \"-10px\", color: sideBarColorsAnim}}>\n                    <a href=\"mailto:rohan.asokan@students.iiit.ac.in?subject=Hi! Rohan\" className=\"side-button-content\">\n                        rohan.asokan@students.iiit.ac.in\n                    </a>\n                </motion.p>\n            </motion.div>\n        </>\n    )\n}\n\nexport default Home;\n","// Three.js\n// import { Canvas } from \"react-three-fiber\"\nimport { Controls } from \"react-three-gui\"\nimport Scene from \"./SceneSetup/Scene\"\n\nimport React, {Suspense} from \"react\"\nimport { EffectComposer } from '@react-three/postprocessing'\n\n// Pages\nimport Home from \"./Pages/Home\"\n\nconst App = () => {\n  return (\n    <>\n      <Controls.Provider>\n        <Controls.Canvas className=\"webgl-canvas\">\n          <Scene />\n\n          <Suspense fallback={null}>\n            <EffectComposer multisampling={4} />\n          </Suspense>\n        </Controls.Canvas>\n        {/*<Controls />*/}\n        \n      </Controls.Provider>\n      <Home />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.body\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}